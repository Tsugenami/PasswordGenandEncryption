import random
import string
from cryptography.fernet import Fernet
#import all required modules

#creating the locked() function to encrypt the password
def locked():
    # opening the key
    with open('avocado_pit.key', 'rb') as filekey:
        key = filekey.read() 
    # using the  tth generated key
    fernet = Fernet(key)

    # opening the original file to encrypt
    with open('Avocado.txt', 'rb') as file:
        original = file.read()
     
    # encrypting the file
    encrypted = fernet.encrypt(original)
 
    # opening the file in write mode and
    # writing the encrypted data
    with open('Avocado.txt', 'wb') as encrypted_file:
        encrypted_file.write(encrypted)


#defining the unlocked() function to decrypt the file
def unlocked(): 
    # import required module

    with open('avocado_pit.key', 'rb') as filekey:
        key = filekey.read()

    # using the key
    fernet = Fernet(key)
    
    # opening the encrypted file
    with open('Avocado.txt', 'rb') as enc_file:
        encrypted = enc_file.read()
    
    # decrypting the file
    decrypted = fernet.decrypt(encrypted)
    
    # opening the file in write mode and
    # writing the decrypted data
    with open('Avocado.txt', 'wb') as dec_file:
        dec_file.write(decrypted)


#defining the password generator function
def pwgen():
        #data types
    lwr = string.ascii_lowercase #will be default paramter
    upr = string.ascii_uppercase #parameter defined as ups
    num = string.digits          #parameter defined as dig
    schar = string.punctuation   #parameter defined as spec

    lng = int(input("Enter desired length of password:  "))
    #User defines length of password



    print("Pleae follow the prompts to define your parameters:")
    print("Use 'Y' for yes and 'N' for no.")
    ups = input("Would you like to use Uppercase characters? ")
    dig = input("Would you like to use Numbers? ")
    spec = input("Would you like to use Special characters? ")

    if ups == "Y":
        x = 1
    else:
        x = 0
    if dig == "Y":
        y = 3
    else:
        y = 0
    if spec == "Y":
        z = 5
    else:
        z = 0

    log = x + y + z

    if log == 9:
        param = lwr + upr + num + schar
    elif log == 8:
        param = lwr + num + schar
    elif log == 6:
        param = lwr + upr + schar
    elif log == 5:
        param = lwr + schar
    elif log == 4:
        param = lwr + upr + num
    elif log == 3:
        param = lwr + num
    elif log == 1:
        param = lwr + upr
    elif log == 0:
        param = lwr


    pwd = random.sample(param,lng)

    #create the password 
    password = "".join(pwd)

    #print the password
    print(password)
    
    with open('Avocado.txt', 'w') as f:
        f.write(password)


    bang = input("\nWould you like to encrypt the password? ")

    if bang == 'Y':
        locked()

    fin = input("\nAre you finished? To continue to the decrypt please say N. ")

    if fin == 'Y':
        exit()

print("Welcome to password generator! \nAll prompts will be answered Y for yes and N for no.")

plan = input("\nWould you like to generate a password?")
print("Note: Password will be saved as Avocado.txt")

if plan == 'Y':
    pwgen()

dcp = input("\nWould you like to decrypt the file? ")

if dcp == 'Y':
    unlocked()
else:
    exit()

answer = input("\nWould you like to start over? ")

if answer == 'Y':
    pwgen()

else:
    exit()
